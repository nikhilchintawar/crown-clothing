{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/components/signin/SignIn.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from \"./../custom-button/CustomButton\";\nimport FormInput from \"./../form-input/FormInput\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/userActions';\nimport \"./signin.styles.scss\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/components/signin/SignIn.js"],"names":["React","connect","CustomButton","FormInput","auth","signInWithGoogle","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CustomButton from \"./../custom-button/CustomButton\";\nimport FormInput from \"./../form-input/FormInput\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/userActions';\n\nimport \"./signin.styles.scss\";\n\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const {email, password} = this.state;\n    try{\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({email: \"\", password:\"\"})\n    } catch(error){\n      console.log(error);\n      \n    }\n\n  };\n\n  handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {googleSignInStart} = this.props;\n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label='password'\n            required\n          />\n          <div className='buttons'>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}