{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SignInFailure } from \"./userActions\";\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle);\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","onGoogleSignInStart","GOOGLE_SIGNI_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAQC,eAAR,MAA8B,aAA9B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;;AAGA,UAAUC,gBAAV,GAA4B;AACxB,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAI,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;;AAED,UAAUC,mBAAV,GAA+B;AAC3B,QAAMpB,UAAU,CAACI,eAAe,CAACiB,qBAAjB,EAAwCX,gBAAxC,CAAhB;AACH;;AAED,UAAUY,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AACnD,MAAI;AACA,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAI,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUS,kBAAV,GAA8B;AAC1B,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM3B,GAAG,CAAC,CACNC,IAAI,CAACiB,mBAAD,CADE,EAENjB,IAAI,CAACwB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {takeLatest, put, all, call} from \"redux-saga/effects\";\nimport  UserActionTypes  from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SignInFailure } from \"./userActions\";\n\n\nfunction* signInWithGoogle(){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot  = yield userRef.get()\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(SignInFailure(error.message))\n    }    \n}\n\nfunction* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle)\n}\n\nfunction* signInWithEmail({payload: {email, password}}){\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot  = yield userRef.get()\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n}\n\nfunction* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}