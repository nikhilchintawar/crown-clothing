{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from \"./userActions\";\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle);\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInFailure","googleSignInSuccess","emailSignInFailure","emailSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","message","onGoogleSignInStart","GOOGLE_SIGNI_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAQC,eAAR,MAA8B,aAA9B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,eAAjG;;AAGA,UAAUC,gBAAV,GAA4B;AACxB,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAI,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACA,UAAMhB,GAAG,CAACQ,mBAAmB,CAAC;AAAES,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACO,mBAAmB,CAACY,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;;AAED,UAAUC,mBAAV,GAA+B;AAC3B,QAAMtB,UAAU,CAACI,eAAe,CAACmB,qBAAjB,EAAwCX,gBAAxC,CAAhB;AACH;;AAED,UAAUY,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AACnD,MAAI;AACA,UAAM;AAACd,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACuB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMZ,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAI,MAAMD,OAAO,CAACE,GAAR,EAA5B;AACA,UAAMhB,GAAG,CAACU,kBAAkB,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACS,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;;AAED,UAAUS,kBAAV,GAA8B;AAC1B,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACmB,mBAAD,CADE,EAENnB,IAAI,CAAC0B,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {takeLatest, put, all, call} from \"redux-saga/effects\";\nimport  UserActionTypes  from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess, emailSignInFailure, emailSignInSuccess } from \"./userActions\";\n\n\nfunction* signInWithGoogle(){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot  = yield userRef.get()\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(googleSignInFailure(error.message))\n    }    \n}\n\nfunction* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle)\n}\n\nfunction* signInWithEmail({payload: {email, password}}){\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot  = yield userRef.get()\n        yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(emailSignInFailure(error))\n    }\n}\n\nfunction* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}