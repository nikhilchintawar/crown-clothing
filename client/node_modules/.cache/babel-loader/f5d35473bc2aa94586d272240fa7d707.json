{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./userActions\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error.message));\n  }\n}\n\n;\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\n;\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\n;\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nfunction* signInAfterSignUp() {}\n\nfunction* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\n;\n\nfunction* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, signInAfterSignUp);\n}\n\n;\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle);\n}\n\n;\n\nfunction* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\n;\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\n;\n\nfunction* onUserSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onUserSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_OUT_SUCCESS","onGoogleSignInStart","GOOGLE_SIGNI_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onUserSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from \"redux-saga/effects\";\nimport  UserActionTypes  from \"./userTypes\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./userActions\";\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData)\n        const userSnapshot  = yield userRef.get()\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch (error) {\n        yield put(SignInFailure(error.message))\n    }    \n}\n\nfunction* signInWithGoogle(){\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(SignInFailure(error.message))\n    }    \n};\n\nfunction* signInWithEmail({payload: {email, password}}){\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n};\n\nfunction* isUserAuthenticated(){\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(SignInFailure(error))\n    }\n};\n\nfunction* signOut(){\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nfunction* signUp({payload: {email, password, displayName}}){\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );      \n        yield put(signUpSuccess({user, additionalData: {displayName}}));\n    } catch (error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nfunction* signInAfterSignUp(){\n\n}\n\nfunction* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n};\n\nfunction* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, signInAfterSignUp)\n};\n\nfunction* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGNI_IN_START, signInWithGoogle)\n};\n\nfunction* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nfunction* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nfunction* onUserSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onUserSignOutStart),\n        call(onSignUpStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}