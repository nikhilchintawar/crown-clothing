{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/pages/shop/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport { fetchCollectionsStartAsync, fetchCollectionsFailure } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nimport { selectIsCollectionFetching } from '../../redux/shop/shopSelector';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/pages/shop/ShopPage.js"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","fetchCollectionsFailure","WithSpinner","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,0BAAT,EAAqCC,uBAArC,QAAoE,8BAApE;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AAGA,MAAMC,8BAA8B,GAAGF,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGH,WAAW,CAACH,cAAD,CAA7C;;AAGA,MAAMO,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAACR,MAAAA;AAAD,QAA+B,KAAKS,KAA1C;AACAT,IAAAA,0BAA0B;AAC5B;;AAEDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAYF;;AAtBgC;;AAuBrC;AAED,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAET;AADuB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAMA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/CollectionPage';\nimport { fetchCollectionsStartAsync, fetchCollectionsFailure } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nimport { selectIsCollectionFetching } from '../../redux/shop/shopSelector';\n\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component{\n\n    componentDidMount(){\n       const {fetchCollectionsStartAsync} = this.props;\n       fetchCollectionsStartAsync();\n    }\n        \n    render(){\n        const {match, isCollectionFetching} = this.props;\n\n        return (\n        <div className=\"shop-page\">\n            <Route \n                exact \n                path={`${match.path}`} \n                render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} \n            />\n            <Route \n                path={`${match.path}/:collectionId`} \n                render={(props) => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} /> } \n            />\n        </div>\n    )}\n};\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}