{"ast":null,"code":"import { put, takeLatest, call, all } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shopActions\";\n\nfunction* fetchCollectionsStartAsync() {\n  yield console.log(\"i am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collecctionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collecctionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLETIONS_START, fetchCollectionsStartAsync);\n}\n;\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["/home/nikhil/Desktop/softwaredevelopment/projects/crown-clothing/src/redux/shop/shopSagas.js"],"names":["put","takeLatest","call","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsStartAsync","console","log","collectionRef","collection","snapshot","get","collecctionsMap","error","message","fetchCollectionsStart","FETCH_COLLETIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,IAAzB,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,eAAjE;;AAGA,UAAUC,0BAAV,GAAsC;AAClC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAG;AACC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,eAAe,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAlC;AACA,UAAMd,GAAG,CAACQ,uBAAuB,CAACQ,eAAD,CAAxB,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACO,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;;AAAA;AAGD,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,UAAU,CAACG,eAAe,CAACgB,sBAAjB,EAAyCX,0BAAzC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUY,SAAV,GAAqB;AACxB,QAAMlB,GAAG,CAAC,CAACD,IAAI,CAACiB,qBAAD,CAAL,CAAD,CAAT;AACH;AAAA","sourcesContent":["import {put, takeLatest, call, all} from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shopTypes\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shopActions\";\n\n\nfunction* fetchCollectionsStartAsync(){\n    yield console.log(\"i am fired\");\n    try{\n        const collectionRef = firestore.collection(\"collections\");\n        const snapshot = yield collectionRef.get();\n        const collecctionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collecctionsMap));\n\n    }catch(error){\n        yield put(fetchCollectionsFailure(error.message));\n    }\n};\n\n\nexport function* fetchCollectionsStart(){\n    yield takeLatest(ShopActionTypes.FETCH_COLLETIONS_START, fetchCollectionsStartAsync);\n};\n\nexport function* shopSagas(){\n    yield all([call(fetchCollectionsStart)])\n};\n"]},"metadata":{},"sourceType":"module"}